[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"René Holst. Author. Waldir Leoncio. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Holst R, Leoncio W (2022). TruncExpFam: Truncated Exponential Family. R package version 1.0.0.9002, https://github.com/ocbe-uio/TruncExpFam.","code":"@Manual{,   title = {TruncExpFam: Truncated Exponential Family},   author = {René Holst and Waldir Leoncio},   year = {2022},   note = {R package version 1.0.0.9002},   url = {https://github.com/ocbe-uio/TruncExpFam}, }"},{"path":"/index.html","id":"what-is-this","dir":"","previous_headings":"","what":"Truncated Exponential Family","title":"Truncated Exponential Family","text":"R package handle truncated members exponential family.","code":""},{"path":[]},{"path":"/index.html","id":"stable-version","dir":"","previous_headings":"","what":"Stable version","title":"Truncated Exponential Family","text":"TruncExpFam available CRAN can installed running following interactive R session:","code":"install.packages(\"TruncExpFam\")"},{"path":"/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Truncated Exponential Family","text":"development version package contains features bug fixes yet published. , however, much less stable CRAN version. can install development version TruncExpFam running following command R (requires remotes package installed beforehand): Finally, load package library(TruncExpFam). list available functions can printed ls(\"package:TruncExpFam\"). details installing TruncExpFam can found Wiki.","code":"remotes::install_github(\"ocbe-uio/TruncExpFam\", ref=\"develop\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Truncated Exponential Family","text":"information package (e.g. suppored distributions), run ?TruncExpFam loading package R session. familiar stats package r* d* functions rnorm() dpois()? , feel right home TruncExpFam, uses rtrunc() function generate random numbers dtrunc() function generate probability densities.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Truncated Exponential Family","text":"TruncExpFam open-source software licensed GPL. contributions welcome! Please use issues page submit bugs find see issues submitted. contribute code, recommend reading Wiki page subject.","code":""},{"path":"/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"Truncated Exponential Family","text":"present work uses package, please remember cite . can also generate output R session running citation(\"TruncExpFam\").","code":"To cite package 'TruncExpFam' in publications use:    René Holst and Waldir Leoncio (2022). TruncExpFam: Truncated Exponential Family. R package version 1.0.0. https://CRAN.R-project.org/package=TruncExpFam  A BibTeX entry for LaTeX users is    @Manual{,     title = {TruncExpFam: Truncated Exponential Family},     author = {René Holst and Waldir Leoncio},     year = {2022},     note = {R package version 1.0.0},     url = {https://CRAN.R-project.org/package=TruncExpFam},   }"},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/TruncExpFam.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Exponential Family — TruncExpFam","title":"Truncated Exponential Family — TruncExpFam","text":"TruncExpFam R package handle truncated members exponential family.","code":""},{"path":"/reference/TruncExpFam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Truncated Exponential Family — TruncExpFam","text":"package offers truncated versions popular distribution functions stats package, well functions retrieve original distribution parameters truncated sample. info, please check rtrunc(), dtrunc() print.trunc().","code":""},{"path":"/reference/TruncExpFam.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Truncated Exponential Family — TruncExpFam","text":"Found bug? Want suggest feature? Contribute scientific open source communities opening issue home page. Check \"BugReports\" field packageDescription(\"TruncExpFam\") URL.","code":""},{"path":"/reference/TruncExpFam.html","id":"supported-distributions","dir":"Reference","previous_headings":"","what":"Supported distributions","title":"Truncated Exponential Family — TruncExpFam","text":"Beta Binomial Chi-Square Continuous Bernoulli Exponential Gamma Inverse Gamma Inverse Gaussian Log-normal Negative Binomial Normal Poisson","code":""},{"path":"/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints welcome message on package load — .onAttach","title":"Prints welcome message on package load — .onAttach","text":"Prints package version number welcome message package load","code":""},{"path":"/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints welcome message on package load — .onAttach","text":"","code":".onAttach(libname, pkgname)"},{"path":"/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints welcome message on package load — .onAttach","text":"libname library location. See ?base::.onAttach details pkgname package name. See ?base::.onAttach details","code":""},{"path":"/reference/dtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability Density Function — dtrunc","title":"Probability Density Function — dtrunc","text":"Calculates PDF given truncated distribution","code":""},{"path":"/reference/dtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability Density Function — dtrunc","text":"","code":"dtrunc(y, eta, a, b)  dtruncbeta(y, eta, a = 0, b = 1)  dtruncbinom(y, eta, a = 0, b = attr(y, \"parameters\")$size, ...)  dtruncchisq(y, eta, a = 0, b = Inf)  dtrunccontbern(y, eta, a = 0, b = 1)  dtruncexp(y, eta, a = 0, b = Inf)  dtruncgamma(y, eta, a = 0, b = Inf)  dtruncinvgamma(y, eta, a = 0, b = Inf)  dtruncinvgauss(y, eta, a = 0, b = Inf)  dtrunclnorm(y, eta, a = 0, b = Inf)  dtruncnbinom(y, eta, a = 0, b = Inf, ...)  dtruncnorm(y, eta, a = -Inf, b = Inf)  dtruncpois(y, eta, a = 0, b = Inf)"},{"path":"/reference/dtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability Density Function — dtrunc","text":"y output rtrunc valid numeric value(s). eta Natural parameters lower truncation limit b upper truncation limit ... size","code":""},{"path":"/reference/dtrunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability Density Function — dtrunc","text":"density y given values eta parameter.","code":""},{"path":"/reference/dtrunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability Density Function — dtrunc","text":"","code":"# Using the output of rtrunc y <- rtrunc(50, mean = 5, sd = 2) dtrunc(y, eta = c(0, -1)) #>  [1] 1.353422e-05 2.887240e-08 3.283001e-16 8.470434e-33 4.149590e-14 #>  [6] 3.884800e-02 1.896833e-12 1.385705e-21 1.883988e-03 5.330437e-09 #> [11] 2.838434e-11 7.101392e-19 1.778742e-20 1.753000e-14 4.580537e-11 #> [16] 1.544144e-11 5.965296e-11 4.676773e-14 1.117171e-17 1.042327e-01 #> [21] 2.406030e-07 2.089785e-14 1.652365e-16 5.147580e-27 7.691738e-02 #> [26] 1.942914e-02 4.853990e-10 1.092103e-13 9.974927e-17 4.172672e-12 #> [31] 3.748317e-10 2.360447e-27 3.010106e-15 1.563992e-01 1.838945e-11 #> [36] 7.690121e-12 8.756967e-09 1.628615e-06 8.300813e-15 2.906843e-14 #> [41] 4.741257e-04 5.535392e-25 2.045299e-01 2.628058e-01 2.991158e-14 #> [46] 1.119335e-11 5.922595e-06 6.062248e-04 6.403634e-04 1.188831e-04  # Directly-inputting values dtruncnorm(y = c(5, 0, -10), eta = c(0, -0.05)) #> [1] 0.0361444785 0.1261566261 0.0008500367"},{"path":"/reference/genrtruncClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates an rtrunc-dispatchable class — genrtruncClass","title":"Generates an rtrunc-dispatchable class — genrtruncClass","text":"Matches list arguments rtrunc method","code":""},{"path":"/reference/genrtruncClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates an rtrunc-dispatchable class — genrtruncClass","text":"","code":"genrtruncClass(n, family, parms)"},{"path":"/reference/genrtruncClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates an rtrunc-dispatchable class — genrtruncClass","text":"n sample size family distribution family parms list parameters passed rtrunc (... element)","code":""},{"path":"/reference/genrtruncClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates an rtrunc-dispatchable class — genrtruncClass","text":"character string.","code":""},{"path":"/reference/genrtruncClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates an rtrunc-dispatchable class — genrtruncClass","text":"Waldir Leoncio","code":""},{"path":"/reference/init.parms.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize parameters — init.parms","title":"Initialize parameters — init.parms","text":"Returns empirical parameter estimate distribution","code":""},{"path":"/reference/init.parms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize parameters — init.parms","text":"","code":"init.parms(y)"},{"path":"/reference/init.parms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize parameters — init.parms","text":"y output rtrunc","code":""},{"path":"/reference/init.parms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize parameters — init.parms","text":"vector parameter estimates input sample","code":""},{"path":"/reference/init.parms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize parameters — init.parms","text":"","code":"# Normal distribution sampNorm <- rtrunc(50, mean = 5, sd = 2) init.parms(sampNorm) #> [1] 5.232598 1.853481  # Poisson distribution sampPois <- rtrunc(10, lambda = 100, family = \"Poisson\") init.parms(sampPois) #> [1] 96.1"},{"path":"/reference/mlEstimationTruncDist.html","id":null,"dir":"Reference","previous_headings":"","what":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"ML-estimation parameters distribution specified family, truncated y.min y.max","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"","code":"mlEstimationTruncDist(   y,   y.min = attr(y, \"truncation_limits\")$a,   y.max = attr(y, \"truncation_limits\")$b,   tol = 1e-05,   max.it = 100,   delta = 0.33,   print.iter = 0,   ny = 100,   ... )"},{"path":"/reference/mlEstimationTruncDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"y Sequence spanning domain truncated distribution y.min Lower bound y y.max Upper bound y tol Error tolerance parameter estimation max.Maximum number iterations delta Indirectly, difference consecutive iterations compare error tolerance print.iter Determines frequency printing (.e., prints every print.iter iterations) ny size intermediate y range sequence. Higher values yield better estimations slower iterations ... parameters passed subfunctions","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"vector class trunc_* containing maximum-likelihood estmation underlying distribution * parameters.","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"print.iter can TRUE, FALSE integer indicating interval printing every X iterations.","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"Inspired Salvador: Pueyo: \"Algorithm maximum likelihood estimation parameters truncated normal lognormal distributions\"","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"René Holst","code":""},{"path":"/reference/mlEstimationTruncDist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML Estimation of Distribution Parameters — mlEstimationTruncDist","text":"","code":"sample_size <- 1000 # Normal sample.norm <- rtrunc(n = sample_size, mean = 2, sd = 1.5, a = -1) mlEstimationTruncDist(   sample.norm,   y.min = -1, max.it = 500, delta = 0.33,   print.iter = TRUE ) #> Estimating parameters for the normal distribution #> it:   1 delta:   0.001349 parm:  2.067 1.385  #> it:   2 delta:  0.0007173 parm:  2.052 1.404  #> it:   3 delta:  0.0004003 parm:  2.04 1.418  #> it:   4 delta:  0.0002313 parm:  2.03 1.428  #> it:   5 delta:  0.0001371 parm:  2.023 1.437  #> it:   6 delta:  8.281e-05 parm:  2.017 1.443  #> it:   7 delta:  5.076e-05 parm:  2.013 1.448  #> it:   8 delta:  3.147e-05 parm:  2.009 1.452  #> it:   9 delta:  1.968e-05 parm:  2.007 1.456  #> it:  10 delta:  1.239e-05 parm:  2.004 1.458  #> it:  11 delta:  7.844e-06 parm:  2.003 1.46  #> [1] 2.001301 1.461855  # Log-Normal sample.lognorm <- rtrunc(   n = sample_size, family = \"lognormal\", meanlog = 2.5, sdlog = 0.5, a = 7 ) ml_lognormal <- mlEstimationTruncDist(   sample.lognorm,   y.min = 7, max.it = 500, tol = 1e-10, delta = 0.3,   print.iter = FALSE ) ml_lognormal #> [1] 2.4693866 0.4973355  # Poisson sample.pois <- rtrunc(n = sample_size, lambda = 10, a = 4, family = \"Poisson\") mlEstimationTruncDist(   sample.pois,   y.min = 4, max.it = 500, delta = 0.33,   print.iter = 5 ) #> Estimating parameters for the poisson distribution #> [1] 10.05904  # Gamma sample.gamma <- rtrunc(n = sample_size, shape = 6, rate = 2, a = 2, family = \"Gamma\") mlEstimationTruncDist(   sample.gamma,   y.min = 2, max.it = 1500, delta = 0.3,   print.iter = 10 ) #> Estimating parameters for the gamma distribution #> it:  10 delta:    0.01745 parm:  7.863 2.457  #> it:  20 delta:    0.00338 parm:  6.971 2.233  #> it:  30 delta:  0.0009542 parm:  6.544 2.124  #> it:  40 delta:  0.0003278 parm:  6.308 2.064  #> it:  50 delta:  0.0001255 parm:  6.165 2.027  #> it:  60 delta:  5.122e-05 parm:  6.076 2.004  #> it:  70 delta:  2.176e-05 parm:  6.019 1.99  #> it:  80 delta:  9.483e-06 parm:  5.981 1.98  #> [1] 5.977916 1.979224  # Negative binomial sample.nbinom <- rtruncnbinom(sample_size, size = 50, prob = .3, a = 100, b = 120) mlEstimationTruncDist(sample.nbinom, r=10) #> [1] 110.2314"},{"path":"/reference/natural2parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert natural parameters to distribution parameters — natural2parameters","title":"Convert natural parameters to distribution parameters — natural2parameters","text":"Convert natural parameters distribution parameters","code":""},{"path":"/reference/natural2parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert natural parameters to distribution parameters — natural2parameters","text":"","code":"natural2parameters(eta)"},{"path":"/reference/natural2parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert natural parameters to distribution parameters — natural2parameters","text":"eta vector natural parameters","code":""},{"path":"/reference/natural2parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert natural parameters to distribution parameters — natural2parameters","text":"vector original distribution parameters","code":""},{"path":[]},{"path":"/reference/natural2parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert natural parameters to distribution parameters — natural2parameters","text":"","code":"samp <- rtrunc(n = 100, lambda = 2, family = \"Poisson\") natural2parameters(init.parms(samp)) #> [1] 8.846306"},{"path":"/reference/parameters2natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert distribution parameters to natural parameters — parameters2natural","title":"Convert distribution parameters to natural parameters — parameters2natural","text":"Convert distribution parameters natural parameters","code":""},{"path":"/reference/parameters2natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert distribution parameters to natural parameters — parameters2natural","text":"","code":"parameters2natural(parms)"},{"path":"/reference/parameters2natural.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert distribution parameters to natural parameters — parameters2natural","text":"parms vector parameters distribution distribution","code":""},{"path":"/reference/parameters2natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert distribution parameters to natural parameters — parameters2natural","text":"vector containing natural parameters","code":""},{"path":[]},{"path":"/reference/parameters2natural.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert distribution parameters to natural parameters — parameters2natural","text":"","code":"# Poisson distribution samp <- rtrunc(n = 100, lambda = 2, family = \"Poisson\") parameters2natural(init.parms(samp)) #> [1] 0.6881346"},{"path":"/reference/print.trunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Print sample from truncated distribution — print.trunc","title":"Print sample from truncated distribution — print.trunc","text":"Special printing methods trunc_* classes.","code":""},{"path":"/reference/print.trunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print sample from truncated distribution — print.trunc","text":"","code":"# S3 method for trunc print(x, details = FALSE, ...)"},{"path":"/reference/print.trunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print sample from truncated distribution — print.trunc","text":"x object print details FALSE (default), hides attributes x ... arguments passed print.default","code":""},{"path":"/reference/print.trunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print sample from truncated distribution — print.trunc","text":"x without attributes","code":""},{"path":"/reference/print.trunc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print sample from truncated distribution — print.trunc","text":"Waldir Leoncio","code":""},{"path":"/reference/rtrunc.html","id":null,"dir":"Reference","previous_headings":"","what":"The Truncated Exponential Family — rtrunc","title":"The Truncated Exponential Family — rtrunc","text":"Random generation truncated exponential family distributions. Please ferer \"Details\" \"Examples\" section information use function.","code":""},{"path":"/reference/rtrunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Truncated Exponential Family — rtrunc","text":"","code":"rtrunc(n, family = \"gaussian\", ...)  rtruncbeta(n, shape1, shape2, a = 0, b = 1)  rtruncbinom(n, size, prob, a = 0, b = size)  rtruncchisq(n, df, a = 0, b = Inf)  rtrunccontbern(n, lambda, a = 0, b = 1)  rtruncexp(n, rate = 1, a = 0, b = Inf)  rtruncgamma(n, shape, rate = 1, scale = 1/rate, a = 0, b = Inf)  rtruncinvgamma(n, shape, rate = 1, scale = 1/rate, a = 0, b = Inf)  rtruncinvgauss(n, m, s, a = 0, b = Inf)  rtrunclnorm(n, meanlog, sdlog, a = 0, b = Inf)  rtruncnbinom(n, size, prob, mu, a = 0, b = Inf)  rtruncnorm(n, mean, sd, a = -Inf, b = Inf)  rtruncpois(n, lambda, a = 0, b = Inf)"},{"path":"/reference/rtrunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Truncated Exponential Family — rtrunc","text":"n sample size family distribution family use ... individual arguments distribution shape1 positive shape parameter alpha shape2 positive shape parameter beta point left truncation b point right truncation size target number successful trials, dispersion parameter (shape parameter gamma mixing distribution). Must strictly positive, need integer. prob probability success trial df degrees freedom \"parent\" distribution lambda mean var \"parent\" distribution rate inverse gamma rate parameter shape inverse gamma shape parameter scale inverse gamma scale parameter m vector means s vector dispersion parameters meanlog mean un-truncated distribution sdlog standard deviation un-truncated distribution mu alternative parametrization via mean mean mean parent distribution sd standard deviation parent distribution","code":""},{"path":"/reference/rtrunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Truncated Exponential Family — rtrunc","text":"sample size n drawn truncated distribution vector one rtrunc_* classes containing sample elements, well attributes related chosen distribution.","code":""},{"path":"/reference/rtrunc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Truncated Exponential Family — rtrunc","text":"One way use function calling rtrunc generic family parameter choice. can also specifically call one methods (e.g. rtrunc.poisson(10, lambda=3) instead `rtrunc(10, family=\"poisson\", lambda=3)). latter flexible (.e., easily programmable) robust (.e., contains better error handling validation procedures), former better conforms nomenclature distribution-related functions stats package.","code":""},{"path":"/reference/rtrunc.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Truncated Exponential Family — rtrunc","text":"current sample-generating algorithm may slow distribution largely represented low-probability values. fixed soon. Please follow https://github.com/ocbe-uio/TruncExpFam/issues/72 details.","code":""},{"path":"/reference/rtrunc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The Truncated Exponential Family — rtrunc","text":"René Holst, Waldir Leôncio","code":""},{"path":"/reference/rtrunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Truncated Exponential Family — rtrunc","text":"","code":"# Truncated binomial distribution sample.binom <- rtrunc(100, family = \"binomial\", prob = 0.6, size = 20, a = 4, b = 10) sample.binom #>   [1]  9 10 10 10 10 10  9  9 10  9  9 10 10 10  8 10  8 10  9 10  9  8 10  9  9 #>  [26]  8  6 10  9 10  9  9 10  9  9 10 10 10  8  8 10  9  7 10  8 10  8 10 10  7 #>  [51]  7 10  8 10 10  8 10  8  9 10  8 10 10  9  5  8 10  9  8  9 10  9 10  7 10 #>  [76] 10 10  7 10 10 10 10  9 10  9  9  7  9  9  8  9  9  8  8  9 10 10 10 10 10 plot(table(sample.binom), ylab = \"Frequency\", main = \"Freq. of sampled values\")   # Truncated Log-Normal distribution sample.lognorm <- rtrunc(   n = 100, family = \"lognormal\", meanlog = 2.5, sdlog = 0.5, a = 7 ) summary(sample.lognorm) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   7.110   9.591  12.671  15.044  18.741  49.455   hist(   sample.lognorm,   nclass = 35, xlim = c(0, 60), freq = FALSE,   ylim = c(0, 0.15) )   # Normal distribution sample.norm <- rtrunc(n = 100, mean = 2, sd = 1.5, a = -1) head(sample.norm) #> [1]  2.00596613  0.77545259  1.31370181  0.34928170  2.06216354 -0.02023617 hist(sample.norm, nclass = 25)   # Gamma distribution sample.gamma <- rtrunc(n = 100, family = \"gamma\", shape = 6, rate = 2, a = 2) hist(sample.gamma, nclass = 15)   # Poisson distribution sample.pois <- rtrunc(n = 10, family = \"poisson\", lambda = 10, a = 4) sample.pois #>  [1]  6  9 11  7  7  7 10 10 15  9 plot(table(sample.pois))"},{"path":"/reference/validateFamilyParms.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate family parameters — validateFamilyParms","title":"Validate family parameters — validateFamilyParms","text":"Checks combination distribution family parameters valid.","code":""},{"path":"/reference/validateFamilyParms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate family parameters — validateFamilyParms","text":"","code":"validateFamilyParms(family, parms, verbose = FALSE)"},{"path":"/reference/validateFamilyParms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate family parameters — validateFamilyParms","text":"family character family distribution name parms character vector distribution parameter names verbose print intermediate messages?","code":""},{"path":"/reference/validateFamilyParms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate family parameters — validateFamilyParms","text":"list telling family-parm combo valid + family name","code":""},{"path":"/reference/validateFamilyParms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validate family parameters — validateFamilyParms","text":"Waldir Leoncio","code":""}]
